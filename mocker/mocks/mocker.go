// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocker

import (
	context "context"

	common "github.com/byorty/contractor/common"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// Mocker is an autogenerated mock type for the Mocker type
type Mocker struct {
	mock.Mock
}

// Configure provides a mock function with given fields: ctx, containers
func (_m *Mocker) Configure(ctx context.Context, containers common.TemplateContainer) error {
	ret := _m.Called(ctx, containers)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, common.TemplateContainer) error); ok {
		r0 = rf(ctx, containers)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *Mocker) Run() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMocker creates a new instance of Mocker. It also registers a cleanup function to assert the mocks expectations.
func NewMocker(t testing.TB) *Mocker {
	mock := &Mocker{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
